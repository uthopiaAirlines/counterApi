/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.19).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package counter.api;

import javax.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import counter.model.User;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-04-16T22:58:40.224Z[GMT]")
@Api(value = "users", description = "the users API")
public interface UsersApi {

    Logger log = LoggerFactory.getLogger(UsersApi.class);

    // default Optional<ObjectMapper> getObjectMapper() {
    //     return Optional.empty();
    // }

    // default Optional<HttpServletRequest> getRequest() {
    //     return Optional.empty();
    // }

    // default Optional<String> getAcceptHeader() {
    //     return getRequest().map(r -> r.getHeader("Accept"));
    // }

    @ApiOperation(value = "Creating a new user", nickname = "usersPost", notes = "", tags = { "Users", })
    @ApiResponses(value = { @ApiResponse(code = 200, message = "Successfully created new User"),
            @ApiResponse(code = 400, message = "Invalid Request", response = String.class) })
    @RequestMapping(value = "/users", produces = { "text/plain" }, consumes = {
            "application/json" }, method = RequestMethod.POST)
    default ResponseEntity<Void> usersPost(@ApiParam(value = "", required = true) @Valid @RequestBody User body) {
        // if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        // } else {
        //     log.warn(
        //             "ObjectMapper or HttpServletRequest not configured in default UsersApi interface so no example is generated");
        // }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

    @ApiOperation(value = "Delete a user", nickname = "usersUserIdDelete", notes = "", tags = { "Users", })
    @ApiResponses(value = { @ApiResponse(code = 204, message = "Successfully deleted User"),
            @ApiResponse(code = 400, message = "Invalid Request", response = String.class),
            @ApiResponse(code = 404, message = "User not found") })
    @RequestMapping(value = "/users/{username}", produces = { "text/plain" }, method = RequestMethod.DELETE)
    default ResponseEntity<Void> usersUserIdDelete(
            @ApiParam(value = "", required = true) @PathVariable("username") String username) {
        // if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        // } else {
        //     log.warn(
        //             "ObjectMapper or HttpServletRequest not configured in default UsersApi interface so no example is generated");
        // }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

    @ApiOperation(value = "Update a user", nickname = "usersUserIdPut", notes = "", tags = { "Users", })
    @ApiResponses(value = { @ApiResponse(code = 200, message = "Successfully updated User"),
            @ApiResponse(code = 400, message = "Invalid Request", response = String.class) })
    @RequestMapping(value = "/users/{username}", produces = { "text/plain" }, consumes = {
            "application/json" }, method = RequestMethod.PUT)
    default ResponseEntity<Void> usersUserIdPut(@ApiParam(value = "", required = true) @Valid @RequestBody User body,
            @ApiParam(value = "", required = true) @PathVariable("username") String username) {
        // if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        // } else {
        //     log.warn(
        //             "ObjectMapper or HttpServletRequest not configured in default UsersApi interface so no example is generated");
        // }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
